name: Continuous integration

on:
  push:
  pull_request:

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust (Stable)
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - uses: Swatinem/rust-cache@v2
      - run: cargo check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust (Stable)
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - uses: Swatinem/rust-cache@v2
      - run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust (Stable)
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run: rustup component add rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust (Stable)
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run: rustup component add clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo clippy -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - check
      - test
      - fmt
      - clippy
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust (Stable)
        run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - uses: Swatinem/rust-cache@v2
      - run: rustup target add x86_64-pc-windows-gnu
      - run: cargo build --release --target x86_64-pc-windows-gnu
      - uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: target/release/swimlane-cli.exe

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build
    if: "startsWith(github.ref, 'refs/tags/')"
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: binaries
          path: binaries
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: binaries/*
